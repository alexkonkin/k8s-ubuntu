---
- name: Check if Kubernetes cluster is present and works
  shell: netstat -tunlp | grep ":6443" | awk '{print $6}'
  register: port_is_occupied

- name: Pull images for Kubernetes cluster
  become_user: root
  become_method: sudo
  become: true
  command: kubeadm config images pull

- name: Initialize Kubernetes cluster
  become_user: root
  become_method: sudo
  become: true
  #adjustment for weave network plugin
  #command: kubeadm init --apiserver-advertise-address=172.16.94.10 --pod-network-cidr=192.168.0.0/16
  #adjustment for Calico
  command: kubeadm init --apiserver-advertise-address=172.16.94.10 --pod-network-cidr=10.244.0.0/16
  register: k8s_init
  when: port_is_occupied.stdout != 'LISTEN'

- name: Kubernetes master node registration result
  debug:
    var: k8s_init

- name: Get Kubernetes token
  become_user: root
  become_method: sudo
  become: true
  shell: kubeadm token list | tail -n 1 | awk '{print $1}'
  register: k8s_token

- name: Get Kubernetes hash
  become_user: root
  become_method: sudo
  become: true
  shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'
  register: k8s_hash

- name: Kubernetes token and hash
  vars:
    msg: |
        {{ k8s_token.stdout }}
        {{ k8s_hash.stdout }}
  debug: 
    msg: "{{ msg.split('\n') }}"

- name: Initialize Weave network plugin
  become_user: root
  become_method: sudo
  become: true
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf &&\
    kubectl apply -f "https://docs.projectcalico.org/archive/v3.18/manifests/calico.yaml"
  #kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"

- name: Prepare directory for root kubernetes config
  become_user: root
  become_method: sudo
  become: true
  file:
    path: /root/.kube/
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Prepare directory for vagrant kubernetes config
  become_user: root
  become_method: sudo
  become: true
  file:
    dest: /home/vagrant/.kube/
    state: directory
    owner: vagrant
    group: vagrant
    mode: '0700'

- name: Create kubernetes config for root user
  become_user: root
  become_method: sudo
  become: true
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root
    mode: '0644'

- name: Create kubernetes config for vagrant user
  become_user: root
  become_method: sudo
  become: true
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    remote_src: yes
    owner: vagrant
    group: vagrant
    mode: '0644'
