---
- name: Download Kubernetes Dashboard v.{{ k8s_version }} setup file
  get_url: url={{ item }} dest=/tmp/
  with_items:
    - https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.5/aio/deploy/recommended.yaml
  when: k8s_version == "1.19.0-00"

- name: Check if Kubernetes cluster is up and running
  shell: netstat -tunlp | grep ":6443" | awk '{print $6}'
  register: port_is_occupied

- name: Create Kubernetes-Dashboard {{ k8s_version }}
  become_user: root
  become_method: sudo
  become: true
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf &&\
    kubectl apply -f /tmp/recommended.yaml
  when: port_is_occupied.stdout == 'LISTEN'


- name: Create service account and cluster role binding
  become_user: root
  become_method: sudo
  become: true
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf &&\
    kubectl apply -f {{ role_path }}/files/k8s-admin-dashboard-user.yaml
  when: port_is_occupied.stdout == 'LISTEN'

- name: Get token and print it to stdout
  become_user: root
  become_method: sudo
  become: true
  shell: |
    export KUBECONFIG=/etc/kubernetes/admin.conf &&\
    kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath="{.secrets[0].name}") -o go-template="{{.data.token | base64decode}}"
  register: k8s_dashboard_token
  when: port_is_occupied.stdout == 'LISTEN'

- name: Kubernetes dashboard token
  vars:
    msg: |
        Kubernetes dashboard token is:
        ------------------------------
        {{ k8s_dashboard_token.stdout }}
        ------------------------------
         you can also get this token by executing the command

         kubectl -n kubernetes-dashboard get secret $(kubectl -n kubernetes-dashboard get sa/admin-user -o jsonpath="{.secrets[0].name}") -o go-template="{{.data.token | base64decode}}"
  debug:
    msg: "{{ msg.split('\n') }}"
